= How to debug Sensibility code locally on your phone =

== 1. Set Up The Sensibility Testbed App ==
The set up steps are listed on [https://sensibilitytestbed.com/projects/project/wiki/setup this page].

== 2. Set Up Python from shell ==
=== Set Up {{{adb}}} ===
To get shell access to your device, run {{{adb shell}}} which comes with your android-sdk/platform-tools. {{{adb}}} is Android debug bridge, which lets you communicate with a connected Android device or emulator instance. Android SDK can be downloaded from the official [https://developer.android.com/sdk/index.html Android website]. The location of your android-sdk/platform-tools varies depending on the path you saved it, your OS or other settings. The full list of {{{adb}}} commands can be found on [http://developer.android.com/tools/help/adb.html this page]. 

=== Set Up Python ===
Shell access to the Python interpreter is tricky to add because the shell knows nothing about Python's paths yet. Depending on which shell you have, there are different routes to take from here. Be sure to adapt the actual paths to your device/installation.

For {{{sh}}} (which is the default shell also greeting you via  {{{adb}}}'s shell command), save the following lines to a shell script (call it exports.sh for example):

{{{
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/data/data/com.sensibility_testbed/files/python/lib
export PYTHONPATH=/mnt/sdcard/Android/data/com.sensibility_testbed/files/extras/python:/data/data/com.sensibility_testbed/files/python/lib/python2.7:/data/data/com.sensibility_testbed/files/python/lib/python2.7/lib-dynload
export PYTHONHOME=/data/data/com.sensibility_testbed/files/python
export TEMP=$TEMP:/mnt/sdcard/Android/data/com.sensibility_testbed/files/extras/tmp/
export PATH=$PATH:/data/data/com.sensibility_testbed/files/python/bin
}}}

Make sure to change the permission of this script to 755 using {{{chmod}}}. Then use 

{{{
adb push exports.sh /data/local/tmp
}}} 

to upload this script to /data/local/tmp on your phone. Note this is the only location on the phone that allows running code without setting up permission. Then use {{{adb shell}}} to log onto your phone, and {{{cd /data/local/tmp}}} into this directory, and run 

{{{
. ./exports.sh
}}}

Now type {{{python}}}, if you see something like below, then your python is set up properly.

{{{
shell@mako:/data/local/tmp $ python
Python 2.7.2 (default, Nov 16 2012, 19:13:11) 
[GCC 4.4.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> 
}}}

== 3. Run Repy code locally on your phone ==
First, use {{{adb push}}} to upload your Repy code, for example, test.r2py, to {{{/mnt/sdcard/Android/data/com.sensibility_testbed/files/sl4a/seattle/seattle_repy}}}. Then use {{{adb shell}}} to go into {{{/mnt/sdcard/Android/data/com.sensibility_testbed/files/sl4a/seattle/seattle_repy}}}, and do

{{{
python repy.py restrictions.advertiseserver test.r2py
}}}

To run code with libraries, do 

{{{
python repy.py restrictions.default dylink.r2py encasementlib.r2py sensor_layer.r2py your_code.r2py
}}}